#!/usr/bin/env ruby

$:.unshift File.join(File.dirname(File.expand_path('..', __FILE__)), 'lib')
require 'docopt'

require 'aws/codedeploy/local/deployer'

# Initialize the deployer first to initialize the configuration values so they can be used as part of the help message
begin
  AWS::CodeDeploy::Local::Deployer.new
rescue
  # If we fail to initialize all the configuration values correctly just grab the default location for the config for the help message
  InstanceAgent::Config.config[:root_dir] = AWS::CodeDeploy::Local::Deployer::CONF_DEFAULT_LOCATION
end

doc = <<DOCOPT
CodeDeploy Local Deployments.

Usage:
  #{__FILE__} --bundle-location <location> --type (tgz|tar|zip|directory) --deployment-group-id <deployment-group-id> [(--configuration-file <configuration-file>)] [(--event <event>)]...
  #{__FILE__} -h | --help
  #{__FILE__} -v | --version

Options:
  -l, --bundle-location      Bundle Location. The prefix and suffix determine whether this location is locally accessible or online (s3 or github).
  -t, --type                 Choose bundle type from tgz, zip, or directory
  -g, --deployment-group-id  The Deployment Group Id specifies the folder in which the local deployments will be executed.
                             Your configuration shows it would be placed in #{InstanceAgent::Config.config[:root_dir]}/<deployment-group-id>.
                             For details on how to configure a different deployment-root folder if necessary see https://docs.aws.amazon.com/codedeploy/latest/userguide/reference-agent-configuration.html
  -e, --event                Optional set of override lifecycle events to run. Any number of lifecycle events can be provided one after another (order matters).
                             If none specificed runs only default events found in the Appspec file using CodeDeploy's ordering.
                             Please note if you don't specify DownloadBundle and Install events they will always precede all your custom events.
                             Those events extract your local bundle / download it as well as install the revision in the correct location.
                             The only events that can run before them are the ones that do so today. See https://docs.aws.amazon.com/codedeploy/latest/userguide/reference-appspec-file-structure-hooks.html
  -c, --configuration-file   Optional agent configuration file location which is by default set to /etc/codedeploy-agent/conf/codedeployagent.yml for linux hosts and C:/ProgramData/Amazon/CodeDeploy/conf.yml for Windows.
                             See https://docs.aws.amazon.com/codedeploy/latest/userguide/reference-agent-configuration.html
  -h, --help                 Show this message.
  -v, --version              Show version.

Examples:
  #{__FILE__} --bundle-location /path/to/local/bundle.tgz --type tgz --deployment-group-id local-deployments
  #{__FILE__} --bundle-location /path/to/local/bundle.zip --type zip --deployment-group-id 217ba5c8-5dd1-4774-89c6-30b107ac5dca
  #{__FILE__} --bundle-location /path/to/local/bundle/dir --type directory --deployment-group-id local-deployments
  #{__FILE__} --bundle-location s3://mybucket/bundle.tgz --type tgz --deployment-group-id local-deployments
  #{__FILE__} --bundle-location s3://mybucket/bundle.zip?versionId=1234&etag=47e8 --type tgz --deployment-group-id local-deployments
  #{__FILE__} --bundle-location https://api.github.com/repos/awslabs/aws-codedeploy-sample-tomcat/zipball/master --type zip --deployment-group-id local-deployments
  #{__FILE__} --bundle-location /path/to/local/bundle.tgz  --deployment-group-id local-deployments -e ApplicationStop -e DownloadBundle -e Install -e ApplicationStart -e HealthCheck -e CustomHook

  Stop Previously Deployed Application:
    #{__FILE__} --bundle-location s3://mybucket/bundle.tgz --type tgz --deployment-group-id 217ba5c8-5dd1-4774-89c6-30b107ac5dca -e ApplicationStop
    #{__FILE__} --bundle-location /path/to/local/bundle.zip --type zip --deployment-group-id 217ba5c8-5dd1-4774-89c6-30b107ac5dca -e ApplicationStop

Specifying AWS Credentials:
  #{__FILE__} allows you to provide your aws access key, secret key, and region in multiple ways. It uses the AWS SDK.
  This means that if you're using an ec2 host with proper roles configured for the host with proper permissions you don't need to do anything else
  to give permission for this host to download your bundle from S3. See https://docs.aws.amazon.com/codedeploy/latest/userguide/getting-started-create-iam-instance-profile.html
  The AWS SDK also provides a few other ways to provide credentials. See https://docs.aws.amazon.com/sdkforruby/api/index.html

DOCOPT

begin
  args = Docopt::docopt(doc, version: '1.0')
  AWS::CodeDeploy::Local::Deployer.new(args['<configuration-file>']).execute_events(args)
rescue Docopt::Exit => e
  puts e.message
  exit(false)
rescue AWS::CodeDeploy::Local::CLIValidator::ValidationError,InstanceAgent::Plugins::CodeDeployPlugin::ScriptError,InstanceMetadata::InstanceMetadataError => e
  puts "ERROR: #{e.message}"
  exit(false)
rescue Aws::Errors::MissingCredentialsError => e
  puts "ERROR: Unable to download from S3 without AWS Credentials set. Please see help message for how to set AWS Credentials (#{__FILE__} --help)"
  exit(false)
end

puts "Successfully deployed your bundle locally"
